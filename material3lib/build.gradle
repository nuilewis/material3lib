import java.text.SimpleDateFormat

plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace 'com.nuilewis.material3lib'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            versionNameSuffix "-release"
        }
        debug {
            versionNameSuffix "-debug"
        }
    }

    flavorDimensions "version"

    productFlavors{
        major {
            dimension "version"
           // applicationIdSuffix ".major"
            versionNameSuffix "-major"
        }
        dev {
            dimension "version"
           // applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        snapshot{
            dimension "version"
           // applicationIdSuffix ".snapshot"
            versionNameSuffix ".snapshot"
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    publishing{
        multipleVariants{
            allVariants()
//            includeBuildTypeValues('debug', 'release')
//            includeFlavorDimensionAndValues('major')
//            includeFlavorDimensionAndValues('dev')
//            includeFlavorDimensionAndValues('snapshot')
           withSourcesJar()
        }
    }
}


dependencies {

    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

}


def static getVersion (){

    // Gets the appropriate version name depending on the current branch.
    // 'RELEASE' will be appended to the version number for the 'main' branch and
    // 'SNAPSHOT' along with the 'build Date' will be appended for any other branch that is not
    //  the main branch such as a 'dev' branch

    String branchName = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()

    String buildDate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())

    String version

    if(branchName == "main"){
        version = "RELEASE"

    } else{
        version = "SNAPSHOT-$buildDate"
    }

    return version
}

String artifactVersion = getVersion()


        publishing {


    publications {

        maven(MavenPublication){
            groupId 'com.nuilewis'
            artifactId 'material3lib'
            version "1.0.0-$artifactVersion"
            afterEvaluate{
                from components.with {}
            }

            pom {
                name = 'Material 3 Lib'
                description = "A Simple Library that uses Material 3 as a transitive dependency"
                developers {
                    developer {
                        id = 'nuilewis'
                        name = "Nuikweh Lewis"
                        email = "test@nuilewis.com"
                    }
                }
            }

            //artifact("$buildDir/outputs/aar/material3lib-release.aar")
            //artifact(task.outputs.getFiles().getSingleFile())
        }
    }
    repositories {

        maven{
            name = "GithubPackages"
            url = "https://maven.pkg.github.com/nuilewis/material3lib"

            credentials {
                username = System.getenv('GITHUB_ACTOR')
                password = System.getenv('GITHUB_TOKEN')
            }

        }

    }

}
